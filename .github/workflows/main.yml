name: Deploy to EC2

on:
  push:
    branches:
      - main
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Set up SSH key for deployment
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

    - name: Ensure known_hosts is set up
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh  # Ensure correct permissions for the .ssh folder
        ls -al ~/.ssh  # Debug: List files in ~/.ssh
        touch ~/.ssh/known_hosts  # Explicitly create the file if not existing
        chmod 644 ~/.ssh/known_hosts  # Ensure correct permissions for known_hosts file
        ls -al ~/.ssh  # Debug: List files after creating known_hosts
        ssh-keyscan -H -t rsa ec2-3-224-251-132.compute-1.amazonaws.com >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts  # Ensure correct permissions for known_hosts file

    - name: Test SSH connection (Debug)
      run: |
        ssh -vvv -o StrictHostKeyChecking=no ubuntu@ec2-3-224-251-132.compute-1.amazonaws.com 'echo "SSH connection successful"'

    - name: Deploy to EC2 (Main)
      if: github.ref == 'refs/heads/main'
      run: |
        ssh -vvv -o StrictHostKeyChecking=no ubuntu@ec2-3-224-251-132.compute-1.amazonaws.com << 'EOF'
          export DB_HOST=${{ secrets.DB_HOST }}
          export DB_NAME=${{ secrets.DB_NAME }}
          export DB_USER=${{ secrets.DB_USER }}
          export DB_PASS=${{ secrets.DB_PASS }}
          
          cd /var/www/html/prod
          git fetch origin main
          git checkout main
          git pull origin main
          composer install
          
          # Run migrations and seeding
          php vendor/bin/phinx migrate -e production
          php vendor/bin/phinx seed:run -e production
          
          sudo systemctl restart nginx
        EOF

    - name: Deploy to EC2 (Staging)
      if: github.ref == 'refs/heads/staging'
      run: |
        ssh -vvv -o StrictHostKeyChecking=no ubuntu@ec2-3-224-251-132.compute-1.amazonaws.com << 'EOF'
          export DB_HOST=${{ secrets.DB_HOST }}
          export DB_NAME=${{ secrets.DB_NAME }}
          export DB_USER=${{ secrets.DB_USER }}
          export DB_PASS=${{ secrets.DB_PASS }}
          
          cd /var/www/html/staging
          git fetch origin staging
          git checkout staging
          git pull origin staging
          composer install
          
          # Run migrations and seeding
          php vendor/bin/phinx migrate -e staging
          php vendor/bin/phinx seed:run -e staging
          
          sudo systemctl restart nginx
        EOF
